{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "AKSName": {
            "type": "string",
            "metadata": {
                "description": "The name of the AkS cluster"
            },
            "defaultValue": "AKSwNetPol"
        },
        "AKSLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of the cluster"
            },
            "defaultValue": "westeurope"
        },
        "EnvironnmentTag": {
            "type": "string",
            "metadata": {
                "description": "The tag describing the environnment"
            }
        },
        "EnvironmentUsageTag": {
            "type": "string",
            "metadata": {
                "description": "The tag describing the environnment Usage"
            }
        },
        "OwnerTag": {
            "type": "string",
            "metadata": {
                "description": "The tag indicating the owner"
            }
        },
        "ProvisioningDateTag": {
            "type": "string",
            "metadata": {
                "description": "The tag indicating the provisioning date"
            }
        },
        "KubeVersion": {
            "type": "string",
            "metadata": {
                "description": "Property: The version of K8S"
            }
        },
        "AKSDNSPrefix": {
            "type": "string",
            "metadata": {
                "description": "Property: The DNS prefix of the cluster"
            }
        },
        "RBACStatus": {
            "type": "boolean",
            "metadata": {
                "description": "Property: Is RBAC with Azure AD Enabled. Always true for this deployment"
            },
            "defaultValue": true
        },
        "PodSecurityStatus": {
            "type": "boolean",
            "metadata": {
                "description": "Property: Is Pod Security enabled. Always true for this deployment"
            },
            "defaultValue": true
        },
        "NodeCount": {
            "type": "integer",
            "metadata": {
                "description": "AgentPool Property: The node count"
            },
            "defaultValue": 3
        },
        "NodeCountMin": {
            "type": "integer",
            "metadata": {
                "description": "AgentPool Property: The minimum number of Nodes"
            },
            "defaultValue": 1
        },
        "NodeCountMax": {
            "type": "integer",
            "metadata": {
                "description": "AgentPool Property: The Maximum number of Nodes"
            },
            "defaultValue": 6
        },
        "NodeSize": {
            "type": "string",
            "metadata": {
                "description": "AgentPool Property: The node VM Size"
            },
            "defaultValue": "Standard_D2s_v3"
        },
        "AKSOSDiskSize": {
            "type": "integer",
            "metadata": {
                "description": "AgentPool Property: The node OS Disk Size"
            },
            "defaultValue": 30
        },
        "AKSSubnetId": {
            "type": "string",
            "metadata": {
                "description": "AgentPool Property: The cluster subnet Id"
            }
        }, 
        "AKSOSType": {
            "type": "string",
            "metadata": {
                "description": "AgentPool Property: The nodes os type"
            },
            "defaultValue": "Linux"
        }, 
        "AKSMaxPodNumber": {
            "type": "integer",
            "metadata": {
                "description": "AgentPool Property: The max pod per node"
            },
            "defaultValue": 100
        },   
        "AKSAutoscalingStatus": {
            "type": "boolean",
            "metadata": {
                "description": "AgentPool Property: The status of autoscaling. Always true for this deployment"
            },
            "defaultValue": true
        }, 
        "AKSType": {
            "type": "enum",
            "metadata": {
                "description": "AgentPool Property: type of the agent pool, always scale set ofr this deployment"
            },
            "defaultValue": "VirtualMachineScaleSets"
        },
        "AKSAz": {
            "type": "array",
            "metadata": {
                "description": "AgentPool Property: The AZ for the AKS cluster"
            },
            "defaultValue": ["1","2","3"]
        },   
        "AKAgentPoolName": {
            "type": "string",
            "metadata": {
                "description": "AgentPool Property: The name of the agent pool"
            },
            "defaultValue": "AKSAgentPool"
        },   
        "AKSAdminName": {
            "type": "string",
            "metadata": {
                "description": "ContainerSVCLinux Property: the admin account name"
            },
            "defaultValue": "AKSAdmin"
        },   
        "AKSSSH": {
            "type": "string",
            "metadata": {
                "description": "ContainerSVCLinux Property: the SSH Key"
            }
        },   
        "AKSSPAppId": {
            "type": "string",
            "metadata": {
                "description": "ManagedCluster Property: the SP Id for the cluster"
            }
        }, 
        "AKSSPAppSecret": {
            "type": "string",
            "metadata": {
                "description": "ManagedCluster Property: the SP Secret for the cluster"
            }
        }, 
        "AKSCNI": {
            "type": "enum",
            "metadata": {
                "description": "ContainerSVCNetworkProfile Property: the CNI for the cluster. Always Azure for this deployment"
            },
            "defaultValue": "azure"
        },
        "AKSPolicy": {
            "type": "enum",
            "metadata": {
                "description": "ContainerSVCNetworkProfile Property: the plugin for netpol. Always calico for this deployment"
            },
            "defaultValue": "calico"
        },
        "AKSSVCCidr": {
            "type": "string",
            "metadata": {
                "description": "ContainerSVCNetworkProfile Property: the Service CIDR"
            }

        },
        "AKSDNSIP": {
            "type": "string",
            "metadata": {
                "description": "ContainerSVCNetworkProfile Property: the DNS Service IP, taken in the SVC CIDR"
            }

        },
        "AKSDockerBridgeCidr": {
            "type": "string",
            "metadata": {
                "description": "ContainerSVCNetworkProfile Property: the CIDR of the Docker Bridge"
            }

        },
        "AKSAADClientId": {
            "type": "string",
            "metadata": {
                "description": "AAD Property: the Id of the client App"
            }

        },
        "AKSAADServerId": {
            "type": "string",
            "metadata": {
                "description": "AAD Property: the Id of the Server App"
            }

        },
        "AKSAADServerSecret": {
            "type": "string",
            "metadata": {
                "description": "AAD Property: the Secret of the Server App"
            }

        },
        "AKSAADTenantId": {
            "type": "string",
            "metadata": {
                "description": "AAD Property: the Id of the AAD Tenant"
            }

        },
        "AKSSPAuthorizedIPRanges": {
            "type": "array",
            "metadata": {
                "description": "The authorized IP on the API Server"
            },
            "defaultValue": ["0.0.0.0/0"]

        }
    },
    "resources": [
        {
            "name": "parameter[('AKSName')]",
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2019-02-01",
            "location": "parameter[('AKSLocation')]",
            "tags": {
                "Environment": "parameter[('EnvironmentTag')]",
                "EnvironmentUsage": "parameter[('EnvironmentUsageTag')]",
                "Owner": "parameter[('OwnerTag')]",
                "ProvisioningDate": "parameter[('ProvisioningDateTag')]"
            },
            "properties": {
              "kubernetesVersion": "parameter[('KubeVersion')]",
              "dnsPrefix": "parameter[('AKSDNSPrefix')]",
              "agentPoolProfiles": [
                {
                  "count": "parameter[('NodeCount')]",
                  "vmSize": "parameter[('NodeSize')]",
                  "osDiskSizeGB": "parameter[('AKSOSDiskSize')]",
                  "vnetSubnetID": "parameter[('AKSSubnetId')]",
                  "maxPods": "parameter[('AKSMaxPodNumber')]",
                  "osType": "parameter[('AKSOSType')]",
                  "maxCount": "parameter[('NodeCountMax')]",
                  "minCount": "parameter[('NodeCountMin')]",
                  "enableAutoScaling": "parameter[('AKSAutoscalingStatus')]",
                  "type": "parameter[('AKSType')]",
                  "availabilityZones": [
                    "parameter[('AKSAz')]"
                  ],
                  "name": "parameter[('AKAgentPoolName')]"
                }
              ],
              "linuxProfile": {
                "adminUsername": "parameter[('AKSAdminName')]",
                "ssh": {
                  "publicKeys": [
                    {
                      "keyData": "parameter[('AKSAdminName')]"
                    }
                  ]
                }
              },
              "servicePrincipalProfile": {
                "clientId": "parameter[('AKSSPAppId')]",
                "secret": "parameter[('AKSSPAppSecret')]"
              },
              "addonProfiles": {},
              "enableRBAC": "parameter[('RBACStatus')]",
              "enablePodSecurityPolicy": "parameter[('PodSecurityStatus')]",
              "networkProfile": {
                "networkPlugin": "parameter[('AKSCNI')]",
                "networkPolicy": "parameter[('AKSPolicy')]",
                "serviceCidr": "parameter[('AKSSVCCidr')]",
                "dnsServiceIP": "parameter[('AKSDNSIP')]",
                "dockerBridgeCidr": "parameter[('AKSDockerBridgeCidr')]"
              },
              "aadProfile": {
                "clientAppID": "parameter[('AKSAADClientId')]",
                "serverAppID": "parameter[('AKSAADServerId')]",
                "serverAppSecret": "parameter[('AKSAADServerSecret')]",
                "tenantID": "parameter[('AKSAADTenantId')]"
              },
              "apiServerAuthorizedIPRanges": [
                "parameter[('AKSSPAuthorizedIPRanges')]"
              ]
            }
          }
    ]
}